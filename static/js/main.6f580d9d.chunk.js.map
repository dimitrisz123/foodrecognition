{"version":3,"sources":["components/Form/Form.js","components/Results/DataPresentation.js","components/Results/ImagePresentation.js","App.js","registerServiceWorker.js","index.js"],"names":["style","container","height","wrap","margin","maxWidth","display","flexDirection","justifyContent","alignItems","http","width","input","borderRadius","backgroundColor","border","fontSize","padding","button","alignSelf","color","local","Form","_ref","onButtonSubmit","onInputchange","onUploadImage","value","react_default","a","createElement","Typography_default","variant","align","TextField_default","InputProps","disableUnderline","onChange","Button_default","onClick","accept","id","multiple","type","htmlFor","component","marginLeft","styles","paper","overflowY","DataPresentation","values","toHomePage","index_es","numeric","map","n","key","ingredient","toUpperCase","probability","fullWidth","size","Image","image","className","src","alt","app","Clarifai","App","apiKey","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","results","data","outputs","concepts","name","array","setState","event","target","showResults","state","models","initModel","GENERAL_MODEL","version","then","generalModel","predict","response","console","log","canvas","document","ctx","getContext","img","onload","drawImage","dataURI","toDataURL","base64img","split","base64","URL","createObjectURL","files","_this$state","components_Form_Form","ImagePresentation","Results_DataPresentation","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","getElementById","process","origin","addEventListener","concat","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6f580d9d.chunk.js","sourcesContent":["import React from \"react\";\r\n// import PropTypes from 'prop-types';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import { withStyles } from '@material-ui/core/styles';\r\n\r\nconst style = {\r\n\tcontainer: {\r\n\t\theight: \"100vh\"\r\n\t},\r\n\twrap: {\r\n\t\tmargin: \"0 auto\",\r\n\t\tmaxWidth: \"800px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\talignItems: \"center\",\r\n\t\theight: \"100%\"\r\n\t},\r\n\thttp: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"100%\"\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"100%\",\r\n\t\tborderRadius: 4,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tborder: \"1px solid #ced4da\",\r\n\t\tfontSize: 16,\r\n\t\tpadding: \"7px 12px\",\r\n\t\tmargin: \"0 0.6rem\"\r\n\t},\r\n\tbutton: {\r\n\t\twidth: \"10%\",\r\n\t\talignSelf: \"stretch\",\r\n\t\tcolor: \"white\",\r\n\t\tbackgroundColor: \"black\"\r\n\t},\r\n\tlocal: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\"\r\n\t}\r\n};\r\n\r\nconst Form = ({ onButtonSubmit, onInputchange, onUploadImage, value }) => {\r\n\treturn (\r\n\t\t<div style={style.container}>\r\n\t\t\t<div style={style.wrap}>\r\n\t\t\t\t<Typography variant=\"display1\" align=\"center\">\r\n\t\t\t\t\tRecognize over 11,000 different concepts including objects,\r\n\t\t\t\t\tthemes, moods, and more.\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t<div style={style.http}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tdisableUnderline: true\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonChange={onInputchange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tstyle={style.button}\r\n\t\t\t\t\t\tonClick={onButtonSubmit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={style.local}>\r\n\t\t\t\t\t<Typography variant=\"title\" align=\"left\">\r\n\t\t\t\t\t\tTRY YOUR OWN PICTURE:\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tstyle={{ display: \"none\" }}\r\n\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\tid=\"contained-button-file\"\r\n\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tonChange={onUploadImage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"contained-button-file\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\tstyle={{ marginLeft: \"0.6rem\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport {\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableHead,\r\n\tTableRow,\r\n\tPaper,\r\n\tButton\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n\tcontainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\"\r\n\t},\r\n\tpaper: {\r\n\t\toverflowY: \"auto\"\r\n\t}\r\n};\r\n\r\nconst DataPresentation = ({ values, toHomePage }) => {\r\n\treturn (\r\n\t\t<div style={styles.container}>\r\n\t\t\t<Paper style={styles.paper}>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell>Predicted Concept</TableCell>\r\n\t\t\t\t\t\t\t<TableCell numeric>Probability </TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{values.map(n => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRow key={n.ingredient}>\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{n.ingredient.toUpperCase()}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell numeric>\r\n\t\t\t\t\t\t\t\t\t\t{n.probability}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</Paper>\r\n\t\t\t<Button\r\n\t\t\t\tfullWidth={true}\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tonClick={() => toHomePage(false)}\r\n\t\t\t>\r\n\t\t\t\tTRY YOUR OWN IMAGE\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DataPresentation;\r\n","import React from \"react\";\r\nimport \"./image.css\";\r\n\r\nconst Image = ({ image }) => {\r\n\treturn (\r\n\t\t<div className=\"image-container\">\r\n\t\t\t<img src={image} alt=\"pic\" width=\"100%\" />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Image;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./components/Form/Form\";\r\nimport DataPresentation from \"./components/Results/DataPresentation\";\r\nimport ImagePresentation from \"./components/Results/ImagePresentation\";\r\nimport Clarifai from \"clarifai\";\r\nimport \"./App.css\";\r\n\r\nconst app = new Clarifai.App({\r\n\tapiKey: \"bfded7855d294034af402fc43b764606\"\r\n});\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tinput:\r\n\t\t\t\t\"https://clarifai.com/cms-assets/20180320225536/general-005.jpg\",\r\n\t\t\timage: \"\",\r\n\t\t\tvalues: [],\r\n\t\t\tshowResults: false\r\n\t\t};\r\n\t}\r\n\r\n\tresults = data => {\r\n\t\treturn data.outputs[\"0\"].data.concepts.map(values => {\r\n\t\t\treturn {\r\n\t\t\t\tingredient: values.name,\r\n\t\t\t\tprobability: values.value\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tarray = values => {\r\n\t\tthis.setState({ values: values });\r\n\t};\r\n\r\n\tonInputchange = event => {\r\n\t\tthis.setState({ input: event.target.value });\r\n\t};\r\n\r\n\ttoHomePage = data => {\r\n\t\tthis.setState({ showResults: data });\r\n\t};\r\n\r\n\tonButtonSubmit = () => {\r\n\t\tthis.setState({ image: this.state.input });\r\n\t\tapp.models\r\n\t\t\t.initModel({\r\n\t\t\t\tid: Clarifai.GENERAL_MODEL,\r\n\t\t\t\tversion: \"aa7f35c01e0642fda5cf400f543e7c40\"\r\n\t\t\t})\r\n\t\t\t.then(generalModel => {\r\n\t\t\t\treturn generalModel.predict(this.state.image);\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst concepts = response[\"outputs\"][0][\"data\"][\"concepts\"];\r\n\t\t\t\tconsole.log(concepts);\r\n\t\t\t\tthis.array(this.results(response));\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tthis.setState({ showResults: true });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\tonUploadImage = event => {\r\n\t\tconst canvas = document.createElement(\"canvas\");\r\n\t\tconst ctx = canvas.getContext(\"2d\");\r\n\t\tconst img = new Image();\r\n\t\timg.onload = () => {\r\n\t\t\tcanvas.width = img.width;\r\n\t\t\tcanvas.height = img.height;\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\t\t\tconst dataURI = canvas.toDataURL(\"image/jpeg\", 0.1);\r\n\t\t\tconst base64img = dataURI.split(\"data:image/jpeg;base64,\");\r\n\t\t\tapp.models\r\n\t\t\t\t.predict(Clarifai.GENERAL_MODEL, {\r\n\t\t\t\t\tbase64: base64img[1]\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tif (response) {\r\n\t\t\t\t\t\tthis.setState({ showResults: true });\r\n\t\t\t\t\t\tthis.setState({ image: dataURI });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.array(this.results(response));\r\n\t\t\t\t});\r\n\t\t};\r\n\t\timg.src = URL.createObjectURL(event.target.files[0]);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconsole.log(this.state);\r\n\t\tconst { values, image, showResults } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t{showResults === false ? (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tvalue={this.state.input}\r\n\t\t\t\t\t\tonButtonSubmit={this.onButtonSubmit}\r\n\t\t\t\t\t\tonInputchange={this.onInputchange}\r\n\t\t\t\t\t\tonUploadImage={this.onUploadImage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"results\">\r\n\t\t\t\t\t\t<ImagePresentation image={image} />\r\n\t\t\t\t\t\t<DataPresentation\r\n\t\t\t\t\t\t\ttoHomePage={this.toHomePage}\r\n\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}