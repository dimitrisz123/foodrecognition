{"version":3,"sources":["components/Form/Form.js","components/Results/DataPresentation.js","components/Results/ImagePresentation.js","App.js","registerServiceWorker.js","index.js"],"names":["style","container","height","wrap","margin","maxWidth","display","flexDirection","justifyContent","alignItems","http","width","input","borderRadius","backgroundColor","border","fontSize","padding","button","alignSelf","color","local","Form","_ref","onButtonSubmit","onInputchange","onUploadImage","value","react_default","a","createElement","Typography_default","variant","align","TextField_default","InputProps","disableUnderline","onChange","Button_default","onClick","accept","id","multiple","type","htmlFor","component","marginLeft","styles","paper","overflowY","DataPresentation","values","toHomePage","index_es","numeric","map","n","key","ingredient","toUpperCase","probability","fullWidth","size","Image","image","className","src","alt","app","Clarifai","App","apiKey","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","results","data","outputs","concepts","name","array","setState","event","target","showResults","state","models","initModel","GENERAL_MODEL","version","then","generalModel","predict","response","console","log","canvas","document","ctx","getContext","img","onload","drawImage","dataURI","toDataURL","base64img","split","base64","URL","createObjectURL","files","_this$state","components_Form_Form","ImagePresentation","Results_DataPresentation","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","getElementById","process","origin","addEventListener","concat","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b9bd3662.chunk.js","sourcesContent":["import React from \"react\";\n// import PropTypes from 'prop-types';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n// import { withStyles } from '@material-ui/core/styles';\n\nconst style = {\n\tcontainer: {\n\t\theight: \"100vh\"\n\t},\n\twrap: {\n\t\tmargin: \"0 auto\",\n\t\tmaxWidth: \"800px\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\tjustifyContent: \"space-evenly\",\n\t\talignItems: \"center\",\n\t\theight: \"100%\"\n\t},\n\thttp: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\twidth: \"100%\"\n\t},\n\tinput: {\n\t\twidth: \"100%\",\n\t\tborderRadius: 4,\n\t\tbackgroundColor: \"white\",\n\t\tborder: \"1px solid #ced4da\",\n\t\tfontSize: 16,\n\t\tpadding: \"7px 12px\",\n\t\tmargin: \"0 0.6rem\"\n\t},\n\tbutton: {\n\t\twidth: \"10%\",\n\t\talignSelf: \"stretch\",\n\t\tcolor: \"white\",\n\t\tbackgroundColor: \"black\"\n\t},\n\tlocal: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\"\n\t}\n};\n\nconst Form = ({ onButtonSubmit, onInputchange, onUploadImage, value }) => {\n\treturn (\n\t\t<div style={style.container}>\n\t\t\t<div style={style.wrap}>\n\t\t\t\t<Typography variant=\"display1\" align=\"center\">\n\t\t\t\t\tRecognize over 11,000 different concepts including objects,\n\t\t\t\t\tthemes, moods, and more.\n\t\t\t\t</Typography>\n\n\t\t\t\t<div style={style.http}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tstyle={style.input}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\tdisableUnderline: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={onInputchange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tstyle={style.button}\n\t\t\t\t\t\tonClick={onButtonSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div style={style.local}>\n\t\t\t\t\t<Typography variant=\"title\" align=\"left\">\n\t\t\t\t\t\tTRY YOUR OWN PICTURE:\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tid=\"contained-button-file\"\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tonChange={onUploadImage}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"contained-button-file\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\tstyle={{ marginLeft: \"0.6rem\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tUpload\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Form;\n","import React from \"react\";\nimport {\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableHead,\n\tTableRow,\n\tPaper,\n\tButton\n} from \"@material-ui/core\";\n\nconst styles = {\n\tcontainer: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\"\n\t},\n\tpaper: {\n\t\toverflowY: \"auto\"\n\t}\n};\n\nconst DataPresentation = ({ values, toHomePage }) => {\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<Paper style={styles.paper}>\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>Predicted Concept</TableCell>\n\t\t\t\t\t\t\t<TableCell numeric>Probability </TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{values.map(n => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TableRow key={n.ingredient}>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t{n.ingredient.toUpperCase()}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell numeric>\n\t\t\t\t\t\t\t\t\t\t{n.probability}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</Paper>\n\t\t\t<Button\n\t\t\t\tfullWidth={true}\n\t\t\t\tsize=\"large\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tonClick={() => toHomePage(false)}\n\t\t\t>\n\t\t\t\tTRY YOUR OWN IMAGE\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default DataPresentation;\n","import React from \"react\";\nimport \"./image.css\";\n\nconst Image = ({ image }) => {\n\treturn (\n\t\t<div className=\"image-container\">\n\t\t\t<img src={image} alt=\"pic\" width=\"100%\" />\n\t\t</div>\n\t);\n};\nexport default Image;\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form/Form\";\nimport DataPresentation from \"./components/Results/DataPresentation\";\nimport ImagePresentation from \"./components/Results/ImagePresentation\";\nimport Clarifai from \"clarifai\";\nimport \"./App.css\";\n\nconst app = new Clarifai.App({\n\tapiKey: \"bfded7855d294034af402fc43b764606\"\n});\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tinput:\n\t\t\t\t\"https://clarifai.com/cms-assets/20180320225536/general-005.jpg\",\n\t\t\timage: \"\",\n\t\t\tvalues: [],\n\t\t\tshowResults: false\n\t\t};\n\t}\n\n\tresults = data => {\n\t\treturn data.outputs[\"0\"].data.concepts.map(values => {\n\t\t\treturn {\n\t\t\t\tingredient: values.name,\n\t\t\t\tprobability: values.value\n\t\t\t};\n\t\t});\n\t};\n\n\tarray = values => {\n\t\tthis.setState({ values: values });\n\t};\n\n\tonInputchange = event => {\n\t\tthis.setState({ input: event.target.value });\n\t};\n\n\ttoHomePage = data => {\n\t\tthis.setState({ showResults: data });\n\t};\n\n\tonButtonSubmit = () => {\n\t\tthis.setState({ image: this.state.input });\n\t\tapp.models\n\t\t\t.initModel({\n\t\t\t\tid: Clarifai.GENERAL_MODEL,\n\t\t\t\tversion: \"aa7f35c01e0642fda5cf400f543e7c40\"\n\t\t\t})\n\t\t\t.then(generalModel => {\n\t\t\t\treturn generalModel.predict(this.state.image);\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tconst concepts = response[\"outputs\"][0][\"data\"][\"concepts\"];\n\t\t\t\tconsole.log(concepts);\n\t\t\t\tthis.array(this.results(response));\n\t\t\t\tif (response) {\n\t\t\t\t\tthis.setState({ showResults: true });\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tonUploadImage = event => {\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tconst ctx = canvas.getContext(\"2d\");\n\t\tconst img = new Image();\n\t\timg.onload = () => {\n\t\t\tcanvas.width = img.width;\n\t\t\tcanvas.height = img.height;\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t\tconst dataURI = canvas.toDataURL(\"image/jpeg\", 0.1);\n\t\t\tconst base64img = dataURI.split(\"data:image/jpeg;base64,\");\n\t\t\tapp.models\n\t\t\t\t.predict(Clarifai.GENERAL_MODEL, {\n\t\t\t\t\tbase64: base64img[1]\n\t\t\t\t})\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response) {\n\t\t\t\t\t\tthis.setState({ showResults: true });\n\t\t\t\t\t\tthis.setState({ image: dataURI });\n\t\t\t\t\t}\n\t\t\t\t\tthis.array(this.results(response));\n\t\t\t\t});\n\t\t};\n\t\timg.src = URL.createObjectURL(event.target.files[0]);\n\t};\n\n\trender() {\n\t\tconsole.log(this.state);\n\t\tconst { values, image, showResults } = this.state;\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t{showResults === false ? (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tvalue={this.state.input}\n\t\t\t\t\t\tonButtonSubmit={this.onButtonSubmit}\n\t\t\t\t\t\tonInputchange={this.onInputchange}\n\t\t\t\t\t\tonUploadImage={this.onUploadImage}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"results\">\n\t\t\t\t\t\t<ImagePresentation image={image} />\n\t\t\t\t\t\t<DataPresentation\n\t\t\t\t\t\t\ttoHomePage={this.toHomePage}\n\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}